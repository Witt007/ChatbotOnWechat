import { FlattenConcurrentAsyncIterable } from './_flatten';
/**
 * Merges elements from all inner async-iterable sequences into a single async-iterable sequence.
 *
 * @template TSource The type of the elements in the source sequences.
 * @returns {OperatorAsyncFunction<AsyncIterable<TSource>, TSource>} The async-iterable sequence that merges the elements of the inner sequences.
 */
export declare function mergeAll(): <TSource>(source: AsyncIterable<AsyncIterable<TSource>>) => FlattenConcurrentAsyncIterable<AsyncIterable<TSource>, TSource>;

// source: wechaty/puppet/contact.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
goog.object.extend(proto, google_protobuf_wrappers_pb);
goog.exportSymbol('proto.wechaty.puppet.ContactAliasRequest', null, global);
goog.exportSymbol('proto.wechaty.puppet.ContactAliasResponse', null, global);
goog.exportSymbol('proto.wechaty.puppet.ContactAvatarRequest', null, global);
goog.exportSymbol('proto.wechaty.puppet.ContactAvatarResponse', null, global);
goog.exportSymbol('proto.wechaty.puppet.ContactCorporationRemarkRequest', null, global);
goog.exportSymbol('proto.wechaty.puppet.ContactCorporationRemarkResponse', null, global);
goog.exportSymbol('proto.wechaty.puppet.ContactDescriptionRequest', null, global);
goog.exportSymbol('proto.wechaty.puppet.ContactDescriptionResponse', null, global);
goog.exportSymbol('proto.wechaty.puppet.ContactGender', null, global);
goog.exportSymbol('proto.wechaty.puppet.ContactListRequest', null, global);
goog.exportSymbol('proto.wechaty.puppet.ContactListResponse', null, global);
goog.exportSymbol('proto.wechaty.puppet.ContactPayloadRequest', null, global);
goog.exportSymbol('proto.wechaty.puppet.ContactPayloadResponse', null, global);
goog.exportSymbol('proto.wechaty.puppet.ContactPhoneRequest', null, global);
goog.exportSymbol('proto.wechaty.puppet.ContactPhoneResponse', null, global);
goog.exportSymbol('proto.wechaty.puppet.ContactSelfNameRequest', null, global);
goog.exportSymbol('proto.wechaty.puppet.ContactSelfNameResponse', null, global);
goog.exportSymbol('proto.wechaty.puppet.ContactSelfQRCodeRequest', null, global);
goog.exportSymbol('proto.wechaty.puppet.ContactSelfQRCodeResponse', null, global);
goog.exportSymbol('proto.wechaty.puppet.ContactSelfSignatureRequest', null, global);
goog.exportSymbol('proto.wechaty.puppet.ContactSelfSignatureResponse', null, global);
goog.exportSymbol('proto.wechaty.puppet.ContactType', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wechaty.puppet.ContactListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wechaty.puppet.ContactListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wechaty.puppet.ContactListRequest.displayName = 'proto.wechaty.puppet.ContactListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wechaty.puppet.ContactListResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.wechaty.puppet.ContactListResponse.repeatedFields_, null);
};
goog.inherits(proto.wechaty.puppet.ContactListResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wechaty.puppet.ContactListResponse.displayName = 'proto.wechaty.puppet.ContactListResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wechaty.puppet.ContactPayloadRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wechaty.puppet.ContactPayloadRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wechaty.puppet.ContactPayloadRequest.displayName = 'proto.wechaty.puppet.ContactPayloadRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wechaty.puppet.ContactPayloadResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.wechaty.puppet.ContactPayloadResponse.repeatedFields_, null);
};
goog.inherits(proto.wechaty.puppet.ContactPayloadResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wechaty.puppet.ContactPayloadResponse.displayName = 'proto.wechaty.puppet.ContactPayloadResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wechaty.puppet.ContactSelfQRCodeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wechaty.puppet.ContactSelfQRCodeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wechaty.puppet.ContactSelfQRCodeRequest.displayName = 'proto.wechaty.puppet.ContactSelfQRCodeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wechaty.puppet.ContactSelfQRCodeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wechaty.puppet.ContactSelfQRCodeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wechaty.puppet.ContactSelfQRCodeResponse.displayName = 'proto.wechaty.puppet.ContactSelfQRCodeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wechaty.puppet.ContactSelfNameRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wechaty.puppet.ContactSelfNameRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wechaty.puppet.ContactSelfNameRequest.displayName = 'proto.wechaty.puppet.ContactSelfNameRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wechaty.puppet.ContactSelfNameResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wechaty.puppet.ContactSelfNameResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wechaty.puppet.ContactSelfNameResponse.displayName = 'proto.wechaty.puppet.ContactSelfNameResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wechaty.puppet.ContactSelfSignatureRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wechaty.puppet.ContactSelfSignatureRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wechaty.puppet.ContactSelfSignatureRequest.displayName = 'proto.wechaty.puppet.ContactSelfSignatureRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wechaty.puppet.ContactSelfSignatureResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wechaty.puppet.ContactSelfSignatureResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wechaty.puppet.ContactSelfSignatureResponse.displayName = 'proto.wechaty.puppet.ContactSelfSignatureResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wechaty.puppet.ContactAliasRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wechaty.puppet.ContactAliasRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wechaty.puppet.ContactAliasRequest.displayName = 'proto.wechaty.puppet.ContactAliasRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wechaty.puppet.ContactAliasResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wechaty.puppet.ContactAliasResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wechaty.puppet.ContactAliasResponse.displayName = 'proto.wechaty.puppet.ContactAliasResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wechaty.puppet.ContactAvatarRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wechaty.puppet.ContactAvatarRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wechaty.puppet.ContactAvatarRequest.displayName = 'proto.wechaty.puppet.ContactAvatarRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wechaty.puppet.ContactAvatarResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wechaty.puppet.ContactAvatarResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wechaty.puppet.ContactAvatarResponse.displayName = 'proto.wechaty.puppet.ContactAvatarResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wechaty.puppet.ContactPhoneRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.wechaty.puppet.ContactPhoneRequest.repeatedFields_, null);
};
goog.inherits(proto.wechaty.puppet.ContactPhoneRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wechaty.puppet.ContactPhoneRequest.displayName = 'proto.wechaty.puppet.ContactPhoneRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wechaty.puppet.ContactPhoneResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.wechaty.puppet.ContactPhoneResponse.repeatedFields_, null);
};
goog.inherits(proto.wechaty.puppet.ContactPhoneResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wechaty.puppet.ContactPhoneResponse.displayName = 'proto.wechaty.puppet.ContactPhoneResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wechaty.puppet.ContactCorporationRemarkRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wechaty.puppet.ContactCorporationRemarkRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wechaty.puppet.ContactCorporationRemarkRequest.displayName = 'proto.wechaty.puppet.ContactCorporationRemarkRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wechaty.puppet.ContactCorporationRemarkResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wechaty.puppet.ContactCorporationRemarkResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wechaty.puppet.ContactCorporationRemarkResponse.displayName = 'proto.wechaty.puppet.ContactCorporationRemarkResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wechaty.puppet.ContactDescriptionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wechaty.puppet.ContactDescriptionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wechaty.puppet.ContactDescriptionRequest.displayName = 'proto.wechaty.puppet.ContactDescriptionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wechaty.puppet.ContactDescriptionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wechaty.puppet.ContactDescriptionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wechaty.puppet.ContactDescriptionResponse.displayName = 'proto.wechaty.puppet.ContactDescriptionResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wechaty.puppet.ContactListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.wechaty.puppet.ContactListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wechaty.puppet.ContactListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wechaty.puppet.ContactListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wechaty.puppet.ContactListRequest}
 */
proto.wechaty.puppet.ContactListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wechaty.puppet.ContactListRequest;
  return proto.wechaty.puppet.ContactListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wechaty.puppet.ContactListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wechaty.puppet.ContactListRequest}
 */
proto.wechaty.puppet.ContactListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wechaty.puppet.ContactListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wechaty.puppet.ContactListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wechaty.puppet.ContactListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wechaty.puppet.ContactListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.wechaty.puppet.ContactListResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wechaty.puppet.ContactListResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.wechaty.puppet.ContactListResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wechaty.puppet.ContactListResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wechaty.puppet.ContactListResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    idsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wechaty.puppet.ContactListResponse}
 */
proto.wechaty.puppet.ContactListResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wechaty.puppet.ContactListResponse;
  return proto.wechaty.puppet.ContactListResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wechaty.puppet.ContactListResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wechaty.puppet.ContactListResponse}
 */
proto.wechaty.puppet.ContactListResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addIds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wechaty.puppet.ContactListResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wechaty.puppet.ContactListResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wechaty.puppet.ContactListResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wechaty.puppet.ContactListResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string ids = 1;
 * @return {!Array<string>}
 */
proto.wechaty.puppet.ContactListResponse.prototype.getIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.wechaty.puppet.ContactListResponse} returns this
 */
proto.wechaty.puppet.ContactListResponse.prototype.setIdsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.wechaty.puppet.ContactListResponse} returns this
 */
proto.wechaty.puppet.ContactListResponse.prototype.addIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.wechaty.puppet.ContactListResponse} returns this
 */
proto.wechaty.puppet.ContactListResponse.prototype.clearIdsList = function() {
  return this.setIdsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wechaty.puppet.ContactPayloadRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.wechaty.puppet.ContactPayloadRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wechaty.puppet.ContactPayloadRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wechaty.puppet.ContactPayloadRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wechaty.puppet.ContactPayloadRequest}
 */
proto.wechaty.puppet.ContactPayloadRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wechaty.puppet.ContactPayloadRequest;
  return proto.wechaty.puppet.ContactPayloadRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wechaty.puppet.ContactPayloadRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wechaty.puppet.ContactPayloadRequest}
 */
proto.wechaty.puppet.ContactPayloadRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wechaty.puppet.ContactPayloadRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wechaty.puppet.ContactPayloadRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wechaty.puppet.ContactPayloadRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wechaty.puppet.ContactPayloadRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.wechaty.puppet.ContactPayloadRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.wechaty.puppet.ContactPayloadRequest} returns this
 */
proto.wechaty.puppet.ContactPayloadRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.wechaty.puppet.ContactPayloadResponse.repeatedFields_ = [18];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wechaty.puppet.ContactPayloadResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.wechaty.puppet.ContactPayloadResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wechaty.puppet.ContactPayloadResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wechaty.puppet.ContactPayloadResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    gender: jspb.Message.getFieldWithDefault(msg, 2, 0),
    type: jspb.Message.getFieldWithDefault(msg, 3, 0),
    name: jspb.Message.getFieldWithDefault(msg, 4, ""),
    avatar: jspb.Message.getFieldWithDefault(msg, 5, ""),
    address: jspb.Message.getFieldWithDefault(msg, 6, ""),
    alias: jspb.Message.getFieldWithDefault(msg, 7, ""),
    city: jspb.Message.getFieldWithDefault(msg, 8, ""),
    friend: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    province: jspb.Message.getFieldWithDefault(msg, 10, ""),
    signature: jspb.Message.getFieldWithDefault(msg, 11, ""),
    star: jspb.Message.getBooleanFieldWithDefault(msg, 12, false),
    weixin: jspb.Message.getFieldWithDefault(msg, 13, ""),
    corporation: jspb.Message.getFieldWithDefault(msg, 14, ""),
    title: jspb.Message.getFieldWithDefault(msg, 15, ""),
    description: jspb.Message.getFieldWithDefault(msg, 16, ""),
    coworker: jspb.Message.getBooleanFieldWithDefault(msg, 17, false),
    phonesList: (f = jspb.Message.getRepeatedField(msg, 18)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wechaty.puppet.ContactPayloadResponse}
 */
proto.wechaty.puppet.ContactPayloadResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wechaty.puppet.ContactPayloadResponse;
  return proto.wechaty.puppet.ContactPayloadResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wechaty.puppet.ContactPayloadResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wechaty.puppet.ContactPayloadResponse}
 */
proto.wechaty.puppet.ContactPayloadResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {!proto.wechaty.puppet.ContactGender} */ (reader.readEnum());
      msg.setGender(value);
      break;
    case 3:
      var value = /** @type {!proto.wechaty.puppet.ContactType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setAvatar(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setAlias(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setCity(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFriend(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setProvince(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setSignature(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStar(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setWeixin(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setCorporation(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 17:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCoworker(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.addPhones(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wechaty.puppet.ContactPayloadResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wechaty.puppet.ContactPayloadResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wechaty.puppet.ContactPayloadResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wechaty.puppet.ContactPayloadResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getGender();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getAvatar();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getAlias();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getCity();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getFriend();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getProvince();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getSignature();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getStar();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
  f = message.getWeixin();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getCorporation();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getCoworker();
  if (f) {
    writer.writeBool(
      17,
      f
    );
  }
  f = message.getPhonesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      18,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.wechaty.puppet.ContactPayloadResponse.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.wechaty.puppet.ContactPayloadResponse} returns this
 */
proto.wechaty.puppet.ContactPayloadResponse.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional ContactGender gender = 2;
 * @return {!proto.wechaty.puppet.ContactGender}
 */
proto.wechaty.puppet.ContactPayloadResponse.prototype.getGender = function() {
  return /** @type {!proto.wechaty.puppet.ContactGender} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.wechaty.puppet.ContactGender} value
 * @return {!proto.wechaty.puppet.ContactPayloadResponse} returns this
 */
proto.wechaty.puppet.ContactPayloadResponse.prototype.setGender = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional ContactType type = 3;
 * @return {!proto.wechaty.puppet.ContactType}
 */
proto.wechaty.puppet.ContactPayloadResponse.prototype.getType = function() {
  return /** @type {!proto.wechaty.puppet.ContactType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.wechaty.puppet.ContactType} value
 * @return {!proto.wechaty.puppet.ContactPayloadResponse} returns this
 */
proto.wechaty.puppet.ContactPayloadResponse.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional string name = 4;
 * @return {string}
 */
proto.wechaty.puppet.ContactPayloadResponse.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.wechaty.puppet.ContactPayloadResponse} returns this
 */
proto.wechaty.puppet.ContactPayloadResponse.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string avatar = 5;
 * @return {string}
 */
proto.wechaty.puppet.ContactPayloadResponse.prototype.getAvatar = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.wechaty.puppet.ContactPayloadResponse} returns this
 */
proto.wechaty.puppet.ContactPayloadResponse.prototype.setAvatar = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string address = 6;
 * @return {string}
 */
proto.wechaty.puppet.ContactPayloadResponse.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.wechaty.puppet.ContactPayloadResponse} returns this
 */
proto.wechaty.puppet.ContactPayloadResponse.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string alias = 7;
 * @return {string}
 */
proto.wechaty.puppet.ContactPayloadResponse.prototype.getAlias = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.wechaty.puppet.ContactPayloadResponse} returns this
 */
proto.wechaty.puppet.ContactPayloadResponse.prototype.setAlias = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string city = 8;
 * @return {string}
 */
proto.wechaty.puppet.ContactPayloadResponse.prototype.getCity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.wechaty.puppet.ContactPayloadResponse} returns this
 */
proto.wechaty.puppet.ContactPayloadResponse.prototype.setCity = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional bool friend = 9;
 * @return {boolean}
 */
proto.wechaty.puppet.ContactPayloadResponse.prototype.getFriend = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.wechaty.puppet.ContactPayloadResponse} returns this
 */
proto.wechaty.puppet.ContactPayloadResponse.prototype.setFriend = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional string province = 10;
 * @return {string}
 */
proto.wechaty.puppet.ContactPayloadResponse.prototype.getProvince = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.wechaty.puppet.ContactPayloadResponse} returns this
 */
proto.wechaty.puppet.ContactPayloadResponse.prototype.setProvince = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string signature = 11;
 * @return {string}
 */
proto.wechaty.puppet.ContactPayloadResponse.prototype.getSignature = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.wechaty.puppet.ContactPayloadResponse} returns this
 */
proto.wechaty.puppet.ContactPayloadResponse.prototype.setSignature = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional bool star = 12;
 * @return {boolean}
 */
proto.wechaty.puppet.ContactPayloadResponse.prototype.getStar = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.wechaty.puppet.ContactPayloadResponse} returns this
 */
proto.wechaty.puppet.ContactPayloadResponse.prototype.setStar = function(value) {
  return jspb.Message.setProto3BooleanField(this, 12, value);
};


/**
 * optional string weixin = 13;
 * @return {string}
 */
proto.wechaty.puppet.ContactPayloadResponse.prototype.getWeixin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.wechaty.puppet.ContactPayloadResponse} returns this
 */
proto.wechaty.puppet.ContactPayloadResponse.prototype.setWeixin = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string corporation = 14;
 * @return {string}
 */
proto.wechaty.puppet.ContactPayloadResponse.prototype.getCorporation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.wechaty.puppet.ContactPayloadResponse} returns this
 */
proto.wechaty.puppet.ContactPayloadResponse.prototype.setCorporation = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string title = 15;
 * @return {string}
 */
proto.wechaty.puppet.ContactPayloadResponse.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.wechaty.puppet.ContactPayloadResponse} returns this
 */
proto.wechaty.puppet.ContactPayloadResponse.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string description = 16;
 * @return {string}
 */
proto.wechaty.puppet.ContactPayloadResponse.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.wechaty.puppet.ContactPayloadResponse} returns this
 */
proto.wechaty.puppet.ContactPayloadResponse.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional bool coworker = 17;
 * @return {boolean}
 */
proto.wechaty.puppet.ContactPayloadResponse.prototype.getCoworker = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 17, false));
};


/**
 * @param {boolean} value
 * @return {!proto.wechaty.puppet.ContactPayloadResponse} returns this
 */
proto.wechaty.puppet.ContactPayloadResponse.prototype.setCoworker = function(value) {
  return jspb.Message.setProto3BooleanField(this, 17, value);
};


/**
 * repeated string phones = 18;
 * @return {!Array<string>}
 */
proto.wechaty.puppet.ContactPayloadResponse.prototype.getPhonesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 18));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.wechaty.puppet.ContactPayloadResponse} returns this
 */
proto.wechaty.puppet.ContactPayloadResponse.prototype.setPhonesList = function(value) {
  return jspb.Message.setField(this, 18, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.wechaty.puppet.ContactPayloadResponse} returns this
 */
proto.wechaty.puppet.ContactPayloadResponse.prototype.addPhones = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 18, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.wechaty.puppet.ContactPayloadResponse} returns this
 */
proto.wechaty.puppet.ContactPayloadResponse.prototype.clearPhonesList = function() {
  return this.setPhonesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wechaty.puppet.ContactSelfQRCodeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.wechaty.puppet.ContactSelfQRCodeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wechaty.puppet.ContactSelfQRCodeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wechaty.puppet.ContactSelfQRCodeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wechaty.puppet.ContactSelfQRCodeRequest}
 */
proto.wechaty.puppet.ContactSelfQRCodeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wechaty.puppet.ContactSelfQRCodeRequest;
  return proto.wechaty.puppet.ContactSelfQRCodeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wechaty.puppet.ContactSelfQRCodeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wechaty.puppet.ContactSelfQRCodeRequest}
 */
proto.wechaty.puppet.ContactSelfQRCodeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wechaty.puppet.ContactSelfQRCodeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wechaty.puppet.ContactSelfQRCodeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wechaty.puppet.ContactSelfQRCodeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wechaty.puppet.ContactSelfQRCodeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wechaty.puppet.ContactSelfQRCodeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.wechaty.puppet.ContactSelfQRCodeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wechaty.puppet.ContactSelfQRCodeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wechaty.puppet.ContactSelfQRCodeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    qrcode: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wechaty.puppet.ContactSelfQRCodeResponse}
 */
proto.wechaty.puppet.ContactSelfQRCodeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wechaty.puppet.ContactSelfQRCodeResponse;
  return proto.wechaty.puppet.ContactSelfQRCodeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wechaty.puppet.ContactSelfQRCodeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wechaty.puppet.ContactSelfQRCodeResponse}
 */
proto.wechaty.puppet.ContactSelfQRCodeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setQrcode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wechaty.puppet.ContactSelfQRCodeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wechaty.puppet.ContactSelfQRCodeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wechaty.puppet.ContactSelfQRCodeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wechaty.puppet.ContactSelfQRCodeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQrcode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string qrcode = 1;
 * @return {string}
 */
proto.wechaty.puppet.ContactSelfQRCodeResponse.prototype.getQrcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.wechaty.puppet.ContactSelfQRCodeResponse} returns this
 */
proto.wechaty.puppet.ContactSelfQRCodeResponse.prototype.setQrcode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wechaty.puppet.ContactSelfNameRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.wechaty.puppet.ContactSelfNameRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wechaty.puppet.ContactSelfNameRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wechaty.puppet.ContactSelfNameRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wechaty.puppet.ContactSelfNameRequest}
 */
proto.wechaty.puppet.ContactSelfNameRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wechaty.puppet.ContactSelfNameRequest;
  return proto.wechaty.puppet.ContactSelfNameRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wechaty.puppet.ContactSelfNameRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wechaty.puppet.ContactSelfNameRequest}
 */
proto.wechaty.puppet.ContactSelfNameRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wechaty.puppet.ContactSelfNameRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wechaty.puppet.ContactSelfNameRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wechaty.puppet.ContactSelfNameRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wechaty.puppet.ContactSelfNameRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.wechaty.puppet.ContactSelfNameRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.wechaty.puppet.ContactSelfNameRequest} returns this
 */
proto.wechaty.puppet.ContactSelfNameRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wechaty.puppet.ContactSelfNameResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.wechaty.puppet.ContactSelfNameResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wechaty.puppet.ContactSelfNameResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wechaty.puppet.ContactSelfNameResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wechaty.puppet.ContactSelfNameResponse}
 */
proto.wechaty.puppet.ContactSelfNameResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wechaty.puppet.ContactSelfNameResponse;
  return proto.wechaty.puppet.ContactSelfNameResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wechaty.puppet.ContactSelfNameResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wechaty.puppet.ContactSelfNameResponse}
 */
proto.wechaty.puppet.ContactSelfNameResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wechaty.puppet.ContactSelfNameResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wechaty.puppet.ContactSelfNameResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wechaty.puppet.ContactSelfNameResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wechaty.puppet.ContactSelfNameResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wechaty.puppet.ContactSelfSignatureRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.wechaty.puppet.ContactSelfSignatureRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wechaty.puppet.ContactSelfSignatureRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wechaty.puppet.ContactSelfSignatureRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    signature: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wechaty.puppet.ContactSelfSignatureRequest}
 */
proto.wechaty.puppet.ContactSelfSignatureRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wechaty.puppet.ContactSelfSignatureRequest;
  return proto.wechaty.puppet.ContactSelfSignatureRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wechaty.puppet.ContactSelfSignatureRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wechaty.puppet.ContactSelfSignatureRequest}
 */
proto.wechaty.puppet.ContactSelfSignatureRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSignature(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wechaty.puppet.ContactSelfSignatureRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wechaty.puppet.ContactSelfSignatureRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wechaty.puppet.ContactSelfSignatureRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wechaty.puppet.ContactSelfSignatureRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSignature();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string signature = 1;
 * @return {string}
 */
proto.wechaty.puppet.ContactSelfSignatureRequest.prototype.getSignature = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.wechaty.puppet.ContactSelfSignatureRequest} returns this
 */
proto.wechaty.puppet.ContactSelfSignatureRequest.prototype.setSignature = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wechaty.puppet.ContactSelfSignatureResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.wechaty.puppet.ContactSelfSignatureResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wechaty.puppet.ContactSelfSignatureResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wechaty.puppet.ContactSelfSignatureResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wechaty.puppet.ContactSelfSignatureResponse}
 */
proto.wechaty.puppet.ContactSelfSignatureResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wechaty.puppet.ContactSelfSignatureResponse;
  return proto.wechaty.puppet.ContactSelfSignatureResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wechaty.puppet.ContactSelfSignatureResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wechaty.puppet.ContactSelfSignatureResponse}
 */
proto.wechaty.puppet.ContactSelfSignatureResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wechaty.puppet.ContactSelfSignatureResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wechaty.puppet.ContactSelfSignatureResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wechaty.puppet.ContactSelfSignatureResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wechaty.puppet.ContactSelfSignatureResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wechaty.puppet.ContactAliasRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.wechaty.puppet.ContactAliasRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wechaty.puppet.ContactAliasRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wechaty.puppet.ContactAliasRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    aliasStringValueDeprecated: (f = msg.getAliasStringValueDeprecated()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f),
    alias: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wechaty.puppet.ContactAliasRequest}
 */
proto.wechaty.puppet.ContactAliasRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wechaty.puppet.ContactAliasRequest;
  return proto.wechaty.puppet.ContactAliasRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wechaty.puppet.ContactAliasRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wechaty.puppet.ContactAliasRequest}
 */
proto.wechaty.puppet.ContactAliasRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setAliasStringValueDeprecated(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAlias(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wechaty.puppet.ContactAliasRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wechaty.puppet.ContactAliasRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wechaty.puppet.ContactAliasRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wechaty.puppet.ContactAliasRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAliasStringValueDeprecated();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.wechaty.puppet.ContactAliasRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.wechaty.puppet.ContactAliasRequest} returns this
 */
proto.wechaty.puppet.ContactAliasRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.StringValue alias_string_value_deprecated = 2;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.wechaty.puppet.ContactAliasRequest.prototype.getAliasStringValueDeprecated = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 2));
};


/**
 * @param {?proto.google.protobuf.StringValue|undefined} value
 * @return {!proto.wechaty.puppet.ContactAliasRequest} returns this
*/
proto.wechaty.puppet.ContactAliasRequest.prototype.setAliasStringValueDeprecated = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wechaty.puppet.ContactAliasRequest} returns this
 */
proto.wechaty.puppet.ContactAliasRequest.prototype.clearAliasStringValueDeprecated = function() {
  return this.setAliasStringValueDeprecated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wechaty.puppet.ContactAliasRequest.prototype.hasAliasStringValueDeprecated = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string alias = 3;
 * @return {string}
 */
proto.wechaty.puppet.ContactAliasRequest.prototype.getAlias = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.wechaty.puppet.ContactAliasRequest} returns this
 */
proto.wechaty.puppet.ContactAliasRequest.prototype.setAlias = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.wechaty.puppet.ContactAliasRequest} returns this
 */
proto.wechaty.puppet.ContactAliasRequest.prototype.clearAlias = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wechaty.puppet.ContactAliasRequest.prototype.hasAlias = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wechaty.puppet.ContactAliasResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.wechaty.puppet.ContactAliasResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wechaty.puppet.ContactAliasResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wechaty.puppet.ContactAliasResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    aliasStringValueDeprecated: (f = msg.getAliasStringValueDeprecated()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f),
    alias: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wechaty.puppet.ContactAliasResponse}
 */
proto.wechaty.puppet.ContactAliasResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wechaty.puppet.ContactAliasResponse;
  return proto.wechaty.puppet.ContactAliasResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wechaty.puppet.ContactAliasResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wechaty.puppet.ContactAliasResponse}
 */
proto.wechaty.puppet.ContactAliasResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setAliasStringValueDeprecated(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAlias(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wechaty.puppet.ContactAliasResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wechaty.puppet.ContactAliasResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wechaty.puppet.ContactAliasResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wechaty.puppet.ContactAliasResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAliasStringValueDeprecated();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
  f = message.getAlias();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional google.protobuf.StringValue alias_string_value_deprecated = 1;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.wechaty.puppet.ContactAliasResponse.prototype.getAliasStringValueDeprecated = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 1));
};


/**
 * @param {?proto.google.protobuf.StringValue|undefined} value
 * @return {!proto.wechaty.puppet.ContactAliasResponse} returns this
*/
proto.wechaty.puppet.ContactAliasResponse.prototype.setAliasStringValueDeprecated = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wechaty.puppet.ContactAliasResponse} returns this
 */
proto.wechaty.puppet.ContactAliasResponse.prototype.clearAliasStringValueDeprecated = function() {
  return this.setAliasStringValueDeprecated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wechaty.puppet.ContactAliasResponse.prototype.hasAliasStringValueDeprecated = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string alias = 2;
 * @return {string}
 */
proto.wechaty.puppet.ContactAliasResponse.prototype.getAlias = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.wechaty.puppet.ContactAliasResponse} returns this
 */
proto.wechaty.puppet.ContactAliasResponse.prototype.setAlias = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wechaty.puppet.ContactAvatarRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.wechaty.puppet.ContactAvatarRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wechaty.puppet.ContactAvatarRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wechaty.puppet.ContactAvatarRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    fileboxStringValueDeprecated: (f = msg.getFileboxStringValueDeprecated()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f),
    fileBox: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wechaty.puppet.ContactAvatarRequest}
 */
proto.wechaty.puppet.ContactAvatarRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wechaty.puppet.ContactAvatarRequest;
  return proto.wechaty.puppet.ContactAvatarRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wechaty.puppet.ContactAvatarRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wechaty.puppet.ContactAvatarRequest}
 */
proto.wechaty.puppet.ContactAvatarRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setFileboxStringValueDeprecated(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFileBox(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wechaty.puppet.ContactAvatarRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wechaty.puppet.ContactAvatarRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wechaty.puppet.ContactAvatarRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wechaty.puppet.ContactAvatarRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFileboxStringValueDeprecated();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.wechaty.puppet.ContactAvatarRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.wechaty.puppet.ContactAvatarRequest} returns this
 */
proto.wechaty.puppet.ContactAvatarRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.StringValue filebox_string_value_deprecated = 2;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.wechaty.puppet.ContactAvatarRequest.prototype.getFileboxStringValueDeprecated = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 2));
};


/**
 * @param {?proto.google.protobuf.StringValue|undefined} value
 * @return {!proto.wechaty.puppet.ContactAvatarRequest} returns this
*/
proto.wechaty.puppet.ContactAvatarRequest.prototype.setFileboxStringValueDeprecated = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wechaty.puppet.ContactAvatarRequest} returns this
 */
proto.wechaty.puppet.ContactAvatarRequest.prototype.clearFileboxStringValueDeprecated = function() {
  return this.setFileboxStringValueDeprecated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wechaty.puppet.ContactAvatarRequest.prototype.hasFileboxStringValueDeprecated = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string file_box = 3;
 * @return {string}
 */
proto.wechaty.puppet.ContactAvatarRequest.prototype.getFileBox = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.wechaty.puppet.ContactAvatarRequest} returns this
 */
proto.wechaty.puppet.ContactAvatarRequest.prototype.setFileBox = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.wechaty.puppet.ContactAvatarRequest} returns this
 */
proto.wechaty.puppet.ContactAvatarRequest.prototype.clearFileBox = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wechaty.puppet.ContactAvatarRequest.prototype.hasFileBox = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wechaty.puppet.ContactAvatarResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.wechaty.puppet.ContactAvatarResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wechaty.puppet.ContactAvatarResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wechaty.puppet.ContactAvatarResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    fileboxStringValueDeprecated: (f = msg.getFileboxStringValueDeprecated()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f),
    fileBox: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wechaty.puppet.ContactAvatarResponse}
 */
proto.wechaty.puppet.ContactAvatarResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wechaty.puppet.ContactAvatarResponse;
  return proto.wechaty.puppet.ContactAvatarResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wechaty.puppet.ContactAvatarResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wechaty.puppet.ContactAvatarResponse}
 */
proto.wechaty.puppet.ContactAvatarResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setFileboxStringValueDeprecated(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFileBox(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wechaty.puppet.ContactAvatarResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wechaty.puppet.ContactAvatarResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wechaty.puppet.ContactAvatarResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wechaty.puppet.ContactAvatarResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFileboxStringValueDeprecated();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
  f = message.getFileBox();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional google.protobuf.StringValue filebox_string_value_deprecated = 1;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.wechaty.puppet.ContactAvatarResponse.prototype.getFileboxStringValueDeprecated = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 1));
};


/**
 * @param {?proto.google.protobuf.StringValue|undefined} value
 * @return {!proto.wechaty.puppet.ContactAvatarResponse} returns this
*/
proto.wechaty.puppet.ContactAvatarResponse.prototype.setFileboxStringValueDeprecated = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wechaty.puppet.ContactAvatarResponse} returns this
 */
proto.wechaty.puppet.ContactAvatarResponse.prototype.clearFileboxStringValueDeprecated = function() {
  return this.setFileboxStringValueDeprecated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wechaty.puppet.ContactAvatarResponse.prototype.hasFileboxStringValueDeprecated = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string file_box = 2;
 * @return {string}
 */
proto.wechaty.puppet.ContactAvatarResponse.prototype.getFileBox = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.wechaty.puppet.ContactAvatarResponse} returns this
 */
proto.wechaty.puppet.ContactAvatarResponse.prototype.setFileBox = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.wechaty.puppet.ContactPhoneRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wechaty.puppet.ContactPhoneRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.wechaty.puppet.ContactPhoneRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wechaty.puppet.ContactPhoneRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wechaty.puppet.ContactPhoneRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    contactId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    phonesList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wechaty.puppet.ContactPhoneRequest}
 */
proto.wechaty.puppet.ContactPhoneRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wechaty.puppet.ContactPhoneRequest;
  return proto.wechaty.puppet.ContactPhoneRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wechaty.puppet.ContactPhoneRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wechaty.puppet.ContactPhoneRequest}
 */
proto.wechaty.puppet.ContactPhoneRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setContactId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addPhones(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wechaty.puppet.ContactPhoneRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wechaty.puppet.ContactPhoneRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wechaty.puppet.ContactPhoneRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wechaty.puppet.ContactPhoneRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContactId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPhonesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * optional string contact_id = 1;
 * @return {string}
 */
proto.wechaty.puppet.ContactPhoneRequest.prototype.getContactId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.wechaty.puppet.ContactPhoneRequest} returns this
 */
proto.wechaty.puppet.ContactPhoneRequest.prototype.setContactId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string phones = 2;
 * @return {!Array<string>}
 */
proto.wechaty.puppet.ContactPhoneRequest.prototype.getPhonesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.wechaty.puppet.ContactPhoneRequest} returns this
 */
proto.wechaty.puppet.ContactPhoneRequest.prototype.setPhonesList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.wechaty.puppet.ContactPhoneRequest} returns this
 */
proto.wechaty.puppet.ContactPhoneRequest.prototype.addPhones = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.wechaty.puppet.ContactPhoneRequest} returns this
 */
proto.wechaty.puppet.ContactPhoneRequest.prototype.clearPhonesList = function() {
  return this.setPhonesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.wechaty.puppet.ContactPhoneResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wechaty.puppet.ContactPhoneResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.wechaty.puppet.ContactPhoneResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wechaty.puppet.ContactPhoneResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wechaty.puppet.ContactPhoneResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    phonesList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wechaty.puppet.ContactPhoneResponse}
 */
proto.wechaty.puppet.ContactPhoneResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wechaty.puppet.ContactPhoneResponse;
  return proto.wechaty.puppet.ContactPhoneResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wechaty.puppet.ContactPhoneResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wechaty.puppet.ContactPhoneResponse}
 */
proto.wechaty.puppet.ContactPhoneResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addPhones(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wechaty.puppet.ContactPhoneResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wechaty.puppet.ContactPhoneResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wechaty.puppet.ContactPhoneResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wechaty.puppet.ContactPhoneResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPhonesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * repeated string phones = 2;
 * @return {!Array<string>}
 */
proto.wechaty.puppet.ContactPhoneResponse.prototype.getPhonesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.wechaty.puppet.ContactPhoneResponse} returns this
 */
proto.wechaty.puppet.ContactPhoneResponse.prototype.setPhonesList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.wechaty.puppet.ContactPhoneResponse} returns this
 */
proto.wechaty.puppet.ContactPhoneResponse.prototype.addPhones = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.wechaty.puppet.ContactPhoneResponse} returns this
 */
proto.wechaty.puppet.ContactPhoneResponse.prototype.clearPhonesList = function() {
  return this.setPhonesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wechaty.puppet.ContactCorporationRemarkRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.wechaty.puppet.ContactCorporationRemarkRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wechaty.puppet.ContactCorporationRemarkRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wechaty.puppet.ContactCorporationRemarkRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    contactId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    corporationRemarkStringValueDeprecated: (f = msg.getCorporationRemarkStringValueDeprecated()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f),
    corporationRemark: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wechaty.puppet.ContactCorporationRemarkRequest}
 */
proto.wechaty.puppet.ContactCorporationRemarkRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wechaty.puppet.ContactCorporationRemarkRequest;
  return proto.wechaty.puppet.ContactCorporationRemarkRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wechaty.puppet.ContactCorporationRemarkRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wechaty.puppet.ContactCorporationRemarkRequest}
 */
proto.wechaty.puppet.ContactCorporationRemarkRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setContactId(value);
      break;
    case 2:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setCorporationRemarkStringValueDeprecated(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCorporationRemark(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wechaty.puppet.ContactCorporationRemarkRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wechaty.puppet.ContactCorporationRemarkRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wechaty.puppet.ContactCorporationRemarkRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wechaty.puppet.ContactCorporationRemarkRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContactId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCorporationRemarkStringValueDeprecated();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
  f = message.getCorporationRemark();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string contact_id = 1;
 * @return {string}
 */
proto.wechaty.puppet.ContactCorporationRemarkRequest.prototype.getContactId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.wechaty.puppet.ContactCorporationRemarkRequest} returns this
 */
proto.wechaty.puppet.ContactCorporationRemarkRequest.prototype.setContactId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.StringValue corporation_remark_string_value_deprecated = 2;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.wechaty.puppet.ContactCorporationRemarkRequest.prototype.getCorporationRemarkStringValueDeprecated = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 2));
};


/**
 * @param {?proto.google.protobuf.StringValue|undefined} value
 * @return {!proto.wechaty.puppet.ContactCorporationRemarkRequest} returns this
*/
proto.wechaty.puppet.ContactCorporationRemarkRequest.prototype.setCorporationRemarkStringValueDeprecated = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wechaty.puppet.ContactCorporationRemarkRequest} returns this
 */
proto.wechaty.puppet.ContactCorporationRemarkRequest.prototype.clearCorporationRemarkStringValueDeprecated = function() {
  return this.setCorporationRemarkStringValueDeprecated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wechaty.puppet.ContactCorporationRemarkRequest.prototype.hasCorporationRemarkStringValueDeprecated = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string corporation_remark = 3;
 * @return {string}
 */
proto.wechaty.puppet.ContactCorporationRemarkRequest.prototype.getCorporationRemark = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.wechaty.puppet.ContactCorporationRemarkRequest} returns this
 */
proto.wechaty.puppet.ContactCorporationRemarkRequest.prototype.setCorporationRemark = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wechaty.puppet.ContactCorporationRemarkResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.wechaty.puppet.ContactCorporationRemarkResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wechaty.puppet.ContactCorporationRemarkResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wechaty.puppet.ContactCorporationRemarkResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wechaty.puppet.ContactCorporationRemarkResponse}
 */
proto.wechaty.puppet.ContactCorporationRemarkResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wechaty.puppet.ContactCorporationRemarkResponse;
  return proto.wechaty.puppet.ContactCorporationRemarkResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wechaty.puppet.ContactCorporationRemarkResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wechaty.puppet.ContactCorporationRemarkResponse}
 */
proto.wechaty.puppet.ContactCorporationRemarkResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wechaty.puppet.ContactCorporationRemarkResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wechaty.puppet.ContactCorporationRemarkResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wechaty.puppet.ContactCorporationRemarkResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wechaty.puppet.ContactCorporationRemarkResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wechaty.puppet.ContactDescriptionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.wechaty.puppet.ContactDescriptionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wechaty.puppet.ContactDescriptionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wechaty.puppet.ContactDescriptionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    contactId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    descriptionStringValueDeprecated: (f = msg.getDescriptionStringValueDeprecated()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f),
    description: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wechaty.puppet.ContactDescriptionRequest}
 */
proto.wechaty.puppet.ContactDescriptionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wechaty.puppet.ContactDescriptionRequest;
  return proto.wechaty.puppet.ContactDescriptionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wechaty.puppet.ContactDescriptionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wechaty.puppet.ContactDescriptionRequest}
 */
proto.wechaty.puppet.ContactDescriptionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setContactId(value);
      break;
    case 2:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setDescriptionStringValueDeprecated(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wechaty.puppet.ContactDescriptionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wechaty.puppet.ContactDescriptionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wechaty.puppet.ContactDescriptionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wechaty.puppet.ContactDescriptionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContactId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescriptionStringValueDeprecated();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string contact_id = 1;
 * @return {string}
 */
proto.wechaty.puppet.ContactDescriptionRequest.prototype.getContactId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.wechaty.puppet.ContactDescriptionRequest} returns this
 */
proto.wechaty.puppet.ContactDescriptionRequest.prototype.setContactId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.StringValue description_string_value_deprecated = 2;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.wechaty.puppet.ContactDescriptionRequest.prototype.getDescriptionStringValueDeprecated = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 2));
};


/**
 * @param {?proto.google.protobuf.StringValue|undefined} value
 * @return {!proto.wechaty.puppet.ContactDescriptionRequest} returns this
*/
proto.wechaty.puppet.ContactDescriptionRequest.prototype.setDescriptionStringValueDeprecated = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wechaty.puppet.ContactDescriptionRequest} returns this
 */
proto.wechaty.puppet.ContactDescriptionRequest.prototype.clearDescriptionStringValueDeprecated = function() {
  return this.setDescriptionStringValueDeprecated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wechaty.puppet.ContactDescriptionRequest.prototype.hasDescriptionStringValueDeprecated = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.wechaty.puppet.ContactDescriptionRequest.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.wechaty.puppet.ContactDescriptionRequest} returns this
 */
proto.wechaty.puppet.ContactDescriptionRequest.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wechaty.puppet.ContactDescriptionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.wechaty.puppet.ContactDescriptionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wechaty.puppet.ContactDescriptionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wechaty.puppet.ContactDescriptionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wechaty.puppet.ContactDescriptionResponse}
 */
proto.wechaty.puppet.ContactDescriptionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wechaty.puppet.ContactDescriptionResponse;
  return proto.wechaty.puppet.ContactDescriptionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wechaty.puppet.ContactDescriptionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wechaty.puppet.ContactDescriptionResponse}
 */
proto.wechaty.puppet.ContactDescriptionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wechaty.puppet.ContactDescriptionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wechaty.puppet.ContactDescriptionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wechaty.puppet.ContactDescriptionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wechaty.puppet.ContactDescriptionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * @enum {number}
 */
proto.wechaty.puppet.ContactGender = {
  CONTACT_GENDER_UNSPECIFIED: 0,
  CONTACT_GENDER_MALE: 1,
  CONTACT_GENDER_FEMALE: 2
};

/**
 * @enum {number}
 */
proto.wechaty.puppet.ContactType = {
  CONTACT_TYPE_UNSPECIFIED: 0,
  CONTACT_TYPE_PERSONAL: 1,
  CONTACT_TYPE_OFFICIAL: 2,
  CONTACT_TYPE_CORPORATION: 3
};

goog.object.extend(exports, proto.wechaty.puppet);
